version: '3.9'

services:
  db:
    image: postgres:16-alpine
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./create_database.sql:/docker-entrypoint-initdb.d/create_database.sql.template
    networks:
      - bot_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER || exit 1" ]
      interval: 5s
      timeout: 5s
      retries: 5
    entrypoint: [ "sh", "-c", "apk add --no-cache gettext && envsubst
     < /docker-entrypoint-initdb.d/create_database.sql.template >
      /docker-entrypoint-initdb.d/create_database.sql && docker-entrypoint.sh postgres" ]

  bot:
    build: .
    container_name: telegram_bot
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
    networks:
      - bot_network

volumes:
  postgres_data:

networks:
  bot_network:
    driver: bridge